@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

SHOW_PERSON_OUTLINE()
AddElementTag("BackendService", $shape=EightSidedShape(), $bgColor="CornflowerBlue", $fontColor="white", $legendText="backend service\neight sided")
AddElementTag("Storage", $shape=RoundedBoxShape(), $bgColor="lightSkyBlue", $fontColor="white")

System_Boundary(c2, "SciTranslate") {
    Container(webUI, "Web интерфейс", "Streamlit, Python", "Позволяет пользователю настраивать и/или создавать рабочее окружение для задач перевода")
    Container(nllbmodel, "ML сервис", "NLLB model", "Настройка и/или дообучение шаблонов модели (стиль ред.издания, предметная область и т.п.)", $tags = "BackendService")
    Container(mlflow, "MLflow", "Platform", "Управление жизненным циклом модели: хранение и публикаций моделей; логирование метрик и весов.")
    Person(translator, "Переводчик", "Авторизованный пользователь с доступом к инструментам научного перевода")
    Person(datascientist, "ML-специалист", "Дообучение и подготовка данных для NLP модели")
    ContainerDb(customer_db, "Database", "PostgreSQL", "Хранение информации по конечному переводу, логи микросервисов для отображения health светофора", $tags = "storage")
    ContainerDb(s3, "Object Storage", "S3", "Объектное хранилище для pickle (поток байт) файлов", $tags = "storage")
    ContainerDb(click, "Columnar Database", "ClickHouse", "Хранение нормированных данных для обучения", $tags = "storage")
    Container(airflow, "Airflow", "Platform", "Оркестровка потоков данных для обеспечения планирования задач и управления пайпланами.")
}


Rel_R(translator, webUI, "Uses", "HTTPS")
Rel_R(datascientist, airflow, "Uses", "cron shell")
Rel_R(datascientist, nllbmodel, "Uses", "HTTPS")
Rel_U(airflow, nllbmodel, "Uses", "HTTPS")
Rel_D(airflow, mlflow, "Uses", "API")
Rel_L(mlflow, s3, "Uses", "Serialization")
Rel_L(s3, mlflow, "Uses", "Deserialization")
Rel_D(nllbmodel, click, "Хранение данных для обучения", "Atomic")


Rel_D(nllbmodel, webUI, "Отправляет события для оповещения на UI по", "WebSocket")
Rel_D(webUI, nllbmodel, "Обновление пользовательской информации используя", "async, JSON/HTTPS")
Rel_R(nllbmodel, customer_db, "Хранение перевода", "JDBC")




SHOW_LEGEND()
@enduml